{
  "swagger": "2.0",
  "info": {
    "title": "Open Bank Project API",
    "description": "An Open Source API for Banks. (c) TESOBE Ltd. 2011 - 2016. Licensed under the AGPL and commercial licences.",
    "contact": {
      "name": "TESOBE Ltd. / Open Bank Project",
      "url": "https://openbankproject.com",
      "email": "contact@tesobe.com"
    },
    "version": "v2.1.0"
  },
  "host": "127.0.0.1:8080",
  "basePath": "/obp/v2.1.0",
  "schemes": [
    "http",
    "https"
  ],
  "securityDefinitions": {
    "directLogin": {
      "type": "apiKey",
      "description": "https://github.com/OpenBankProject/OBP-API/wiki/Direct-Login",
      "in": "header",
      "name": "Authorization"
    }
  },
  "security": [
    {
      "directLogin": []
    }
  ],
  "paths": {
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts": {
      "get": {
        "tags": [
          "1_2_1"
        ],
        "summary": "Get Other Accounts of one Account.",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Returns data about all the other accounts that have shared at least one transaction with the ACCOUNT_ID at BANK_ID. Authentication is Optional Authentication is required if the view VIEW_ID is not public.</p>",
        "operationId": "1_2_1-getOtherAccountsForBankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/other_accounts/{OTHER_ACCOUNT_ID}": {
      "get": {
        "tags": [
          "1_2_1"
        ],
        "summary": "Get Other Account by Id.",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Returns data about the Other Account that has shared at least one transaction with ACCOUNT_ID at BANK_ID. Authentication is Optional Authentication is required if the view is not public.</p>",
        "operationId": "1_2_1-getOtherAccountByIdForBankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "OTHER_ACCOUNT_ID",
            "description": "The other account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types": {
      "get": {
        "tags": [
          "1_4_0"
        ],
        "summary": "Get Transaction Request Types for Account",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Returns the Transation Request Types that the account specified by ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are the ways this API Server can create a Transaction via a Transaction Request (as opposed to Transaction Types which include external types too e.g. for Transactions created by core banking etc.)</p><p>A Transaction Request Type internally determines:</p><ul>  <li>the required Transaction Request 'body' i.e. fields that define the 'what' and 'to' of a Transaction Request,</li>  <li>the type of security challenge that may be be raised before the Transaction Request proceeds, and</li>  <li>the threshold of that challenge.</li></ul><p>For instance in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency units, the user must supply a positive integer to complete the Transaction Request and create a Transaction.</p><p>This approach aims to provide only one endpoint for initiating transactions, and one that handles challenges, whilst still allowing flexibility with the payload and internal logic.</p>",
        "operationId": "1_4_0-getTransactionRequestTypes",
        "parameters": [
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/COUNTERPARTY/transaction-requests": {
      "post": {
        "tags": [
          "2_1_0"
        ],
        "summary": "Create Transaction Request (COUNTERPARTY)",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response. This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>The payee is set in the request body. Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{  \"XAF\":{  \"KRW\":1.87975,  \"GBP\":0.00131092,  \"AED\":0.00601555,  \"INR\":0.110241,  \"JPY\":0.185328,  \"USD\":0.00163773,  \"EUR\":0.00152449  },  \"KRW\":{  \"XAF\":0.531986,  \"GBP\":6.97389E-4,  \"AED\":0.00320019,  \"INR\":0.0586469,  \"JPY\":0.0985917,  \"USD\":8.7125E-4,  \"EUR\":8.11008E-4  },  \"GBP\":{  \"XAF\":762.826,  \"KRW\":1433.92,  \"AED\":4.58882,  \"INR\":84.095,  \"JPY\":141.373,  \"USD\":1.2493,  \"EUR\":1.16278  },  \"AED\":{  \"XAF\":166.236,  \"KRW\":312.482,  \"GBP\":0.217921,  \"INR\":18.3255,  \"JPY\":30.8081,  \"USD\":0.27225,  \"EUR\":0.253425  },  \"INR\":{  \"XAF\":9.07101,  \"KRW\":17.0512,  \"GBP\":0.0118913,  \"AED\":0.0545671,  \"JPY\":1.68111,  \"USD\":0.0148559,  \"EUR\":0.0138287  },  \"JPY\":{  \"XAF\":5.39585,  \"KRW\":10.1428,  \"GBP\":0.0070735,  \"AED\":0.032459,  \"INR\":0.594846,  \"USD\":0.00883695,  \"EUR\":0.00822592  },  \"USD\":{  \"XAF\":610.601,  \"KRW\":1147.78,  \"GBP\":0.800446,  \"AED\":3.6731,  \"INR\":67.3135,  \"JPY\":113.161,  \"EUR\":0.930886  },  \"EUR\":{  \"XAF\":655.957,  \"KRW\":1233.03,  \"GBP\":0.860011,  \"AED\":3.94594,  \"INR\":72.3136,  \"JPY\":121.567,  \"USD\":1.07428  } }</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p><p>Special instructions for COUNTERPARTY:</p><p>When using a COUNTERPARTY to create a Transaction Request, specificy the counterparty_id in the body of the request. The routing details of the counterparty will be forwarded for the transfer.</p>",
        "operationId": "2_1_0-createTransactionRequest-dc42ce72-38b7-4718-bd87-54584a6a64a3",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BANK_BODY",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionRequestBodyCounterpartyJSON"
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/SEPA/transaction-requests": {
      "post": {
        "tags": [
          "2_1_0"
        ],
        "summary": "Create Transaction Request (SEPA)",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response. This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>The payee is set in the request body. Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{  \"XAF\":{  \"KRW\":1.87975,  \"GBP\":0.00131092,  \"AED\":0.00601555,  \"INR\":0.110241,  \"JPY\":0.185328,  \"USD\":0.00163773,  \"EUR\":0.00152449  },  \"KRW\":{  \"XAF\":0.531986,  \"GBP\":6.97389E-4,  \"AED\":0.00320019,  \"INR\":0.0586469,  \"JPY\":0.0985917,  \"USD\":8.7125E-4,  \"EUR\":8.11008E-4  },  \"GBP\":{  \"XAF\":762.826,  \"KRW\":1433.92,  \"AED\":4.58882,  \"INR\":84.095,  \"JPY\":141.373,  \"USD\":1.2493,  \"EUR\":1.16278  },  \"AED\":{  \"XAF\":166.236,  \"KRW\":312.482,  \"GBP\":0.217921,  \"INR\":18.3255,  \"JPY\":30.8081,  \"USD\":0.27225,  \"EUR\":0.253425  },  \"INR\":{  \"XAF\":9.07101,  \"KRW\":17.0512,  \"GBP\":0.0118913,  \"AED\":0.0545671,  \"JPY\":1.68111,  \"USD\":0.0148559,  \"EUR\":0.0138287  },  \"JPY\":{  \"XAF\":5.39585,  \"KRW\":10.1428,  \"GBP\":0.0070735,  \"AED\":0.032459,  \"INR\":0.594846,  \"USD\":0.00883695,  \"EUR\":0.00822592  },  \"USD\":{  \"XAF\":610.601,  \"KRW\":1147.78,  \"GBP\":0.800446,  \"AED\":3.6731,  \"INR\":67.3135,  \"JPY\":113.161,  \"EUR\":0.930886  },  \"EUR\":{  \"XAF\":655.957,  \"KRW\":1233.03,  \"GBP\":0.860011,  \"AED\":3.94594,  \"INR\":72.3136,  \"JPY\":121.567,  \"USD\":1.07428  } }</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p><p>Special instructions for SEPA:</p><p>When using a SEPA Transaction Request, you specify the IBAN of a Counterparty in the body of the request. The routing details (IBAN) of the counterparty will be forwarded to the core banking system for the transfer.</p>",
        "operationId": "2_1_0-createTransactionRequest-000c7a54-3532-4fed-a97a-87d2fe8a3013",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BANK_BODY",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionRequestBodySEPAJSON"
            }
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests": {
      "post": {
        "tags": [
          "2_1_0"
        ],
        "summary": "Create Transaction Request.",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Initiate a Payment via creating a Transaction Request.</p><p>In OBP, a <code>transaction request</code> may or may not result in a <code>transaction</code>. However, a <code>transaction</code> only has one possible state: completed.</p><p>A <code>Transaction Request</code> can have one of several states.</p><p><code>Transactions</code> are modeled on items in a bank statement that represent the movement of money.</p><p><code>Transaction Requests</code> are requests to move money which may or may not succeeed and thus result in a <code>Transaction</code>.</p><p>A <code>Transaction Request</code> might create a security challenge that needs to be answered before the <code>Transaction Request</code> proceeds.</p><p>Transaction Requests contain charge information giving the client the opportunity to proceed or not (as long as the challenge level is appropriate).</p><p>Transaction Requests can have one of several Transaction Request Types which expect different bodies. The escaped body is returned in the details key of the GET response. This provides some commonality and one URL for many different payment or transfer types with enough flexibility to validate them differently.</p><p>The payer is set in the URL. Money comes out of the BANK_ID and ACCOUNT_ID specified in the URL.</p><p>The payee is set in the request body. Money goes into the BANK_ID and ACCOUNT_ID specified in the request body.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is commonly set to SANDBOX_TAN. See getTransactionRequestTypesSupportedByBank for all supported types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any currency, unless it is set differently on this server), the transaction request will create a transaction without a challenge, else the Transaction Request will be set to INITIALISED and a challenge will need to be answered.</p><p>If a challenge is created you must answer it using Answer Transaction Request Challenge before the Transaction is created.</p><p>You can transfer between different currency accounts. (new in 2.0.0). The currency in body must match the sending account.</p><p>The following static FX rates are available in sandbox mode:</p><p>{  \"XAF\":{  \"KRW\":1.87975,  \"GBP\":0.00131092,  \"AED\":0.00601555,  \"INR\":0.110241,  \"JPY\":0.185328,  \"USD\":0.00163773,  \"EUR\":0.00152449  },  \"KRW\":{  \"XAF\":0.531986,  \"GBP\":6.97389E-4,  \"AED\":0.00320019,  \"INR\":0.0586469,  \"JPY\":0.0985917,  \"USD\":8.7125E-4,  \"EUR\":8.11008E-4  },  \"GBP\":{  \"XAF\":762.826,  \"KRW\":1433.92,  \"AED\":4.58882,  \"INR\":84.095,  \"JPY\":141.373,  \"USD\":1.2493,  \"EUR\":1.16278  },  \"AED\":{  \"XAF\":166.236,  \"KRW\":312.482,  \"GBP\":0.217921,  \"INR\":18.3255,  \"JPY\":30.8081,  \"USD\":0.27225,  \"EUR\":0.253425  },  \"INR\":{  \"XAF\":9.07101,  \"KRW\":17.0512,  \"GBP\":0.0118913,  \"AED\":0.0545671,  \"JPY\":1.68111,  \"USD\":0.0148559,  \"EUR\":0.0138287  },  \"JPY\":{  \"XAF\":5.39585,  \"KRW\":10.1428,  \"GBP\":0.0070735,  \"AED\":0.032459,  \"INR\":0.594846,  \"USD\":0.00883695,  \"EUR\":0.00822592  },  \"USD\":{  \"XAF\":610.601,  \"KRW\":1147.78,  \"GBP\":0.800446,  \"AED\":3.6731,  \"INR\":67.3135,  \"JPY\":113.161,  \"EUR\":0.930886  },  \"EUR\":{  \"XAF\":655.957,  \"KRW\":1233.03,  \"GBP\":0.860011,  \"AED\":3.94594,  \"INR\":72.3136,  \"JPY\":121.567,  \"USD\":1.07428  } }</p><p>Transaction Requests satisfy PSD2 requirements thus:</p><p>1) A transaction can be initiated by a third party application.</p><p>2) The customer is informed of the charge that will incurred.</p><p>3) The call supports delegated authentication (OAuth)</p><p>See <a href=\"https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py\">this python code</a> for a complete example of this flow.</p><p>There is further documentation <a href=\"https://github.com/OpenBankProject/OBP-API/wiki/Transaction-Requests\">here</a></p><p>Authentication is Mandatory</p>",
        "operationId": "2_1_0-createTransactionRequest-bf3728d3-5ac9-4e16-a3e7-0210b986a084",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BANK_BODY",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TransactionRequestBodyJsonV200"
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_REQUEST_TYPE",
            "description": "The transaction request type",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-request-types/{TRANSACTION_REQUEST_TYPE}/transaction-requests/{TRANSACTION_REQUEST_ID}/challenge": {
      "post": {
        "tags": [
          "2_1_0"
        ],
        "summary": "Answer Transaction Request Challenge.",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>In Sandbox mode, any string that can be converted to a positive integer will be accepted as an answer.</p>",
        "operationId": "2_1_0-answerTransactionRequestChallenge",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "BANK_BODY",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ChallengeAnswerJSON"
            }
          },
          {
            "in": "path",
            "name": "TRANSACTION_REQUEST_ID",
            "description": "The transaction request id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "TRANSACTION_REQUEST_TYPE",
            "description": "The transaction request type",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "201": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/{VIEW_ID}/transaction-requests": {
      "get": {
        "tags": [
          "2_1_0"
        ],
        "summary": "Get Transaction Requests.",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Returns transaction requests for account specified by ACCOUNT_ID at bank specified by BANK_ID.</p><p>The VIEW_ID specified must be 'owner' and the user must have access to this view.</p><p>Version 2.0.0 now returns charge information.</p><p>Transaction Requests serve to initiate transactions that may or may not proceed. They contain information including:</p><ul>  <li>Transaction Request Id</li>  <li>Type</li>  <li>Status (INITIATED, COMPLETED)</li>  <li>Challenge (in order to confirm the request)</li>  <li>From Bank / Account</li>  <li>Details including Currency, Value, Description and other initiation information specific to each type. (Could potentialy include a list of future transactions.)</li>  <li>Related Transactions</li></ul><p>PSD2 Context: PSD2 requires transparency of charges to the customer. This endpoint provides the charge that would be applied if the Transaction Request proceeds - and a record of that charge there after. The customer can proceed with the Transaction by answering the security challenge.</p>",
        "operationId": "2_1_0-getTransactionRequests",
        "parameters": [
          {
            "in": "path",
            "name": "VIEW_ID",
            "description": "The view id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/TransactionRequestWithChargeJSONs210"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/accounts/private": {
      "get": {
        "tags": [
          "2_0_0"
        ],
        "summary": "Get private accounts at one bank (Authenticated access).",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Returns the list of private (non-public) accounts at BANK_ID that the user has access to. For each account the API returns the ID and the available views.</p><p>If you want to see more information on the Views, use the Account Detail call. If you want less information about the account, use the /my accounts call</p><p>Authentication is Mandatory</p>",
        "operationId": "2_0_0-privateAccountsAtOneBank",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/transaction-types": {
      "get": {
        "tags": [
          "2_0_0"
        ],
        "summary": "Get Transaction Types offered by the bank",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists the possible Transaction Types available at the bank (as opposed to Transaction Request Types which are the possible ways Transactions can be created by this API Server).</p><ul>  <li>id : Unique transaction type id across the API instance. SHOULD be a UUID. MUST be unique.</li>  <li>bank_id : The bank that supports this TransactionType</li>  <li>short_code : A short code (SHOULD have no-spaces) which MUST be unique across the bank. May be stored with Transactions to link here</li>  <li>summary : A succinct summary</li>  <li>description : A longer description</li>  <li>charge : The charge to the customer for each one of these</li></ul><p>Authentication is Optional</p>",
        "operationId": "2_0_0-getTransactionTypes",
        "parameters": [
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/banks/{BANK_ID}/users/{USER_ID}/entitlements": {
      "get": {
        "tags": [
          "2_1_0"
        ],
        "summary": "Get Entitlements specified by BANK_ID and USER_ID",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Login is required.</p>",
        "operationId": "2_1_0-getEntitlementsByBankAndUser",
        "parameters": [
          {
            "in": "path",
            "name": "USER_ID",
            "description": "The user id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/EntitlementJSONs"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/my/accounts": {
      "get": {
        "tags": [
          "2_0_0"
        ],
        "summary": "Get Accounts at all Banks (Private)",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Get private accounts at all banks (Authenticated access) Returns the list of accounts containing private views for the user at all banks. For each account the API returns the ID and the available views.</p><p>Authentication is Mandatory</p>",
        "operationId": "2_0_0-corePrivateAccountsAllBanks",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/account": {
      "get": {
        "tags": [
          "2_0_0"
        ],
        "summary": "Get Account by Id (Core)",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Information returned about the account specified by ACCOUNT_ID:</p><ul>  <li>Number</li>  <li>Owners</li>  <li>Type</li>  <li>Balance</li>  <li>IBAN</li></ul><p>This call returns the owner view and requires access to that view.</p><p>OAuth authentication is required</p>",
        "operationId": "2_0_0-getCoreAccountById",
        "parameters": [
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/my/banks/{BANK_ID}/accounts/{ACCOUNT_ID}/transactions": {
      "get": {
        "tags": [
          "2_0_0"
        ],
        "summary": "Get Transactions for Account (Core)",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Returns transactions list (Core info) of the account specified by ACCOUNT_ID.</p><p>Authentication is required.</p><p>Possible custom headers for pagination:</p><ul>  <li>obp_sort_by=CRITERIA ==&gt; default value: \"completed\" field</li>  <li>obp_sort_direction=ASC/DESC ==&gt; default value: DESC</li>  <li>obp_limit=NUMBER ==&gt; default value: 50</li>  <li>obp_offset=NUMBER ==&gt; default value: 0</li>  <li>obp_from_date=DATE =&gt; default value: date of the oldest transaction registered (format below)</li>  <li>obp_to_date=DATE =&gt; default value: date of the newest transaction registered (format below)</li></ul><p><strong>Date format parameter</strong>: \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\" (2014-07-01T00:00:00.000Z) ==&gt; time zone is UTC.</p>",
        "operationId": "2_0_0-getCoreTransactionsForBankAccount",
        "parameters": [
          {
            "in": "path",
            "name": "ACCOUNT_ID",
            "description": "The account id",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "BANK_ID",
            "description": "The bank id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/NoSupportYet"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/roles": {
      "get": {
        "tags": [
          "2_1_0"
        ],
        "summary": "Get Roles",
        "security": [
          {
            "directLogin": []
          }
        ],
        "description": "<p>Returns all available roles</p><p>Login is required.</p>",
        "operationId": "2_1_0-getRoles",
        "parameters": [],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/AvailableRolesJSON"
            }
          },
          "400": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Error": {
      "type": "object",
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "UserJSONV200": {
      "required": [
        "user_id",
        "email",
        "provider_id",
        "provider",
        "username",
        "entitlements"
      ],
      "properties": {
        "provider": {
          "type": "string",
          "example": "OBP"
        },
        "email": {
          "type": "string",
          "example": "robert.x.0.gh@example.com"
        },
        "username": {
          "type": "string",
          "example": "robert.x.0.gh"
        },
        "provider_id": {
          "type": "string",
          "example": "OBP"
        },
        "user_id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "entitlements": {
          "$ref": "#/definitions/EntitlementJSONs"
        }
      }
    },
    "ResourceUserJSON": {
      "required": [
        "user_id",
        "email",
        "provider_id",
        "provider",
        "username"
      ],
      "properties": {
        "provider": {
          "type": "string",
          "example": "obp"
        },
        "email": {
          "type": "string",
          "example": "contact@tesobe.com"
        },
        "username": {
          "type": "string",
          "example": "TESOBE"
        },
        "provider_id": {
          "type": "string",
          "example": "obp"
        },
        "user_id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "BankRoutingJSON": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "scheme": {
          "type": "string",
          "example": "Bank_ID"
        }
      }
    },
    "MetricJson": {
      "required": [
        "user_id",
        "url",
        "date",
        "user_name",
        "app_name",
        "developer_email",
        "implemented_by_partial_function",
        "implemented_in_version",
        "consumer_id",
        "verb"
      ],
      "properties": {
        "implemented_in_version": {
          "type": "string",
          "example": "v210"
        },
        "url": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "implemented_by_partial_function": {
          "type": "string",
          "example": "getBanks"
        },
        "user_id": {
          "type": "string",
          "example": "134"
        },
        "developer_email": {
          "type": "string",
          "example": "contact@tesobe.ocm"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "consumer_id": {
          "type": "string",
          "example": "123"
        },
        "verb": {
          "type": "string",
          "example": "get"
        },
        "app_name": {
          "type": "string",
          "example": "SOFI"
        },
        "user_name": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "TransactionImageJSON": {
      "required": [
        "id",
        "label",
        "URL",
        "date",
        "user"
      ],
      "properties": {
        "URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "label": {
          "type": "string",
          "example": "NONE"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "TransactionCommentJSON": {
      "required": [
        "id",
        "value",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "value": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "CachedFunctionJSON": {
      "required": [
        "function_name",
        "ttl_in_seconds"
      ],
      "properties": {
        "ttl_in_seconds": {
          "type": "integer",
          "format": "int32",
          "example": "5"
        },
        "function_name": {
          "type": "string",
          "example": "getBanks"
        }
      }
    },
    "CoreTransactionJSON": {
      "required": [
        "id",
        "account",
        "counterparty",
        "details"
      ],
      "properties": {
        "details": {
          "$ref": "#/definitions/CoreTransactionDetailsJSON"
        },
        "counterparty": {
          "$ref": "#/definitions/CoreCounterpartyJSON"
        },
        "account": {
          "$ref": "#/definitions/ThisAccountJSON"
        },
        "id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "UserJSONV210": {
      "required": [
        "id",
        "provider",
        "username"
      ],
      "properties": {
        "username": {
          "type": "string",
          "example": "OBP"
        },
        "provider": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "ChallengeAnswerJSON": {
      "required": [
        "id",
        "answer"
      ],
      "properties": {
        "answer": {
          "type": "string",
          "example": "123345"
        },
        "id": {
          "type": "string",
          "example": "89123812"
        }
      }
    },
    "BankId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "gh.uk.9j"
        }
      }
    },
    "ViewIdsJson": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "CustomerFaceImageJson": {
      "required": [
        "url",
        "date"
      ],
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "url": {
          "type": "string",
          "example": "www.openbankproject"
        }
      }
    },
    "TransactionRequestTypeJSONV210": {
      "required": [
        "transaction_request_type"
      ],
      "properties": {
        "transaction_request_type": {
          "type": "string",
          "example": "SandboxTan"
        }
      }
    },
    "TransactionImagesJSON": {
      "required": [
        "images"
      ],
      "properties": {
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionImageJSON"
          }
        }
      }
    },
    "PermissionJSON": {
      "required": [
        "user",
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        }
      }
    },
    "AvailableRoleJSON": {
      "required": [
        "role",
        "requires_bank_id"
      ],
      "properties": {
        "requires_bank_id": {
          "type": "boolean",
          "example": "true"
        },
        "role": {
          "type": "string",
          "example": "CanCreateBranch"
        }
      }
    },
    "LocationPlainJSON": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "1.535"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "1.532"
        }
      }
    },
    "CoreAccountHolderJSON": {
      "required": [
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "ZACK"
        }
      }
    },
    "TransactionTypeId": {
      "required": [
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "TransactionTagJSON": {
      "required": [
        "id",
        "value",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "value": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "CoreTransactionsJSON": {
      "required": [
        "transactions"
      ],
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CoreTransactionJSON"
          }
        }
      }
    },
    "ReplacementJSON": {
      "required": [
        "requested_date",
        "reason_requested"
      ],
      "properties": {
        "reason_requested": {
          "type": "string",
          "example": "Good Point"
        },
        "requested_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        }
      }
    },
    "CreateViewJSON": {
      "required": [
        "name",
        "description",
        "is_public",
        "which_alias_to_use",
        "hide_metadata_if_alias_used",
        "allowed_actions"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "test"
        },
        "description": {
          "type": "string",
          "example": "good"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "which_alias_to_use": {
          "type": "string",
          "example": "good"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TransactionRequestWithChargeJSON210": {
      "required": [
        "id",
        "type",
        "from",
        "details",
        "transaction_ids",
        "status",
        "start_date",
        "end_date",
        "challenge",
        "charge"
      ],
      "properties": {
        "challenge": {
          "$ref": "#/definitions/ChallengeJSON"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "status": {
          "type": "string",
          "example": "Complete"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJSON"
        },
        "details": {
          "type": "string",
          "example": ""
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV200"
        },
        "type": {
          "type": "string",
          "example": "SEPA"
        },
        "transaction_ids": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "ViewJSONV121": {
      "required": [
        "id",
        "short_name",
        "description",
        "is_public",
        "alias",
        "hide_metadata_if_alias_used",
        "can_add_comment",
        "can_add_corporate_location",
        "can_add_image",
        "can_add_image_url",
        "can_add_more_info",
        "can_add_open_corporates_url",
        "can_add_physical_location",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_add_tag",
        "can_add_url",
        "can_add_where_tag",
        "can_delete_comment",
        "can_delete_corporate_location",
        "can_delete_image",
        "can_delete_physical_location",
        "can_delete_tag",
        "can_delete_where_tag",
        "can_edit_owner_comment",
        "can_see_bank_account_balance",
        "can_see_bank_account_bank_name",
        "can_see_bank_account_currency",
        "can_see_bank_account_iban",
        "can_see_bank_account_label",
        "can_see_bank_account_national_identifier",
        "can_see_bank_account_number",
        "can_see_bank_account_owners",
        "can_see_bank_account_swift_bic",
        "can_see_bank_account_type",
        "can_see_comments",
        "can_see_corporate_location",
        "can_see_image_url",
        "can_see_images",
        "can_see_more_info",
        "can_see_open_corporates_url",
        "can_see_other_account_bank_name",
        "can_see_other_account_iban",
        "can_see_other_account_kind",
        "can_see_other_account_metadata",
        "can_see_other_account_national_identifier",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_see_owner_comment",
        "can_see_physical_location",
        "can_see_private_alias",
        "can_see_public_alias",
        "can_see_tags",
        "can_see_transaction_amount",
        "can_see_transaction_balance",
        "can_see_transaction_currency",
        "can_see_transaction_description",
        "can_see_transaction_finish_date",
        "can_see_transaction_metadata",
        "can_see_transaction_other_bank_account",
        "can_see_transaction_start_date",
        "can_see_transaction_this_bank_account",
        "can_see_transaction_type",
        "can_see_url",
        "can_see_where_tag"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "None"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "CoreAccountJSON": {
      "required": [
        "id",
        "label",
        "bank_id",
        "_links"
      ],
      "properties": {
        "_links": {
          "type": "string",
          "example": ""
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        }
      }
    },
    "BankJSON": {
      "required": [
        "id",
        "short_name",
        "full_name",
        "logo",
        "website",
        "bank_routing"
      ],
      "properties": {
        "website": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "full_name": {
          "type": "string",
          "example": "full_name"
        },
        "logo": {
          "type": "string",
          "example": "logo"
        },
        "id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "short_name": {
          "type": "string",
          "example": "short_name "
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJSON"
        }
      }
    },
    "PostCustomerJsonV210": {
      "required": [
        "user_id",
        "customer_number",
        "legal_name",
        "mobile_phone_number",
        "email",
        "face_image",
        "date_of_birth",
        "relationship_status",
        "dependants",
        "dob_of_dependants",
        "credit_rating",
        "credit_limit",
        "highest_education_attained",
        "employment_status",
        "kyc_status",
        "last_ok_date"
      ],
      "properties": {
        "email": {
          "type": "string",
          "example": "person@example.com"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "+44 07972 444 876"
        },
        "customer_number": {
          "type": "string",
          "example": "new customer number 687687678"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "Bachelor’s Degree"
        },
        "user_id": {
          "type": "string",
          "example": "user_id to attach this customer to e.g. 123213"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "credit_rating": {
          "$ref": "#/definitions/CustomerCreditRatingJSON"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "employment_status": {
          "type": "string",
          "example": "Employed"
        },
        "legal_name": {
          "type": "string",
          "example": "NONE"
        },
        "credit_limit": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "5"
        },
        "relationship_status": {
          "type": "string",
          "example": "Single"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "IbanJson": {
      "required": [
        "iban"
      ],
      "properties": {
        "iban": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "TransactionRequestWithChargeJSONs210": {
      "required": [
        "transaction_requests_with_charges"
      ],
      "properties": {
        "transaction_requests_with_charges": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestWithChargeJSON210"
          }
        }
      }
    },
    "SuccessMessage": {
      "required": [
        "success"
      ],
      "properties": {
        "success": {
          "type": "string",
          "example": "Success"
        }
      }
    },
    "BranchJSONV220": {
      "required": [
        "id",
        "bank_id",
        "name",
        "address",
        "location",
        "meta",
        "lobby",
        "drive_up",
        "branch_routing"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "location": {
          "$ref": "#/definitions/LocationJson"
        },
        "branch_routing": {
          "$ref": "#/definitions/BranchRoutingJSON"
        },
        "drive_up": {
          "$ref": "#/definitions/DriveUpJson"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "meta": {
          "$ref": "#/definitions/MetaJson"
        },
        "lobby": {
          "$ref": "#/definitions/LobbyJson"
        },
        "address": {
          "$ref": "#/definitions/AddressJson"
        }
      }
    },
    "AddressJson": {
      "required": [
        "line_1",
        "line_2",
        "line_3",
        "city",
        "state",
        "postcode",
        "country"
      ],
      "properties": {
        "city": {
          "type": "string",
          "example": "Berlin"
        },
        "line_2": {
          "type": "string",
          "example": "Berlin"
        },
        "state": {
          "type": "string",
          "example": "Berlin"
        },
        "postcode": {
          "type": "string",
          "example": "123"
        },
        "country": {
          "type": "string",
          "example": "Germany"
        },
        "line_3": {
          "type": "string",
          "example": "Berlin"
        },
        "line_1": {
          "type": "string",
          "example": "Berlin"
        }
      }
    },
    "AvailableRolesJSON": {
      "required": [
        "roles"
      ],
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AvailableRoleJSON"
          }
        }
      }
    },
    "MessageDocJson": {
      "required": [
        "process",
        "message_format",
        "description",
        "example_outbound_message",
        "example_inbound_message"
      ],
      "properties": {
        "example_inbound_message": {
          "type": "string",
          "example": ""
        },
        "description": {
          "type": "string",
          "example": "get Banks"
        },
        "process": {
          "type": "string",
          "example": "getBanks"
        },
        "message_format": {
          "type": "string",
          "example": "KafkaV2017"
        },
        "example_outbound_message": {
          "type": "string",
          "example": ""
        }
      }
    },
    "PortJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "8080"
        },
        "property": {
          "type": "string",
          "example": "default"
        }
      }
    },
    "ViewsJSONV220": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV220"
          }
        }
      }
    },
    "LocationJSONV121": {
      "required": [
        "latitude",
        "longitude",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV121"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "1.231"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "1.231"
        }
      }
    },
    "CoreTransactionDetailsJSON": {
      "required": [
        "type",
        "description",
        "posted",
        "completed",
        "new_balance",
        "value"
      ],
      "properties": {
        "new_balance": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "description": {
          "type": "string",
          "example": "OBP"
        },
        "completed": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "type": {
          "type": "string",
          "example": "AC"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        }
      }
    },
    "UserJSONV121": {
      "required": [
        "id",
        "provider",
        "display_name"
      ],
      "properties": {
        "display_name": {
          "type": "string",
          "example": "OBP"
        },
        "provider": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        }
      }
    },
    "TransactionTagsJSON": {
      "required": [
        "tags"
      ],
      "properties": {
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionTagJSON"
          }
        }
      }
    },
    "ThisAccountJSON": {
      "required": [
        "id",
        "holders",
        "number",
        "kind",
        "IBAN",
        "swift_bic",
        "bank"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "IBAN": {
          "type": "string",
          "example": "UK1234AD"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK1234AD"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "holders": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AccountHolderJSON"
          }
        },
        "kind": {
          "type": "string",
          "example": "AC"
        }
      }
    },
    "BankJSONV220": {
      "required": [
        "id",
        "full_name",
        "short_name",
        "logo_url",
        "website_url",
        "swift_bic",
        "national_identifier",
        "bank_routing"
      ],
      "properties": {
        "national_identifier": {
          "type": "string",
          "example": "UK97ZZZ1234567890"
        },
        "full_name": {
          "type": "string",
          "example": "uk"
        },
        "swift_bic": {
          "type": "string",
          "example": "IIIGGB22"
        },
        "logo_url": {
          "type": "string",
          "example": "https://static.openbankproject.com/images/sandbox/bank_x.png"
        },
        "id": {
          "type": "string",
          "example": "gh.29.uk.x"
        },
        "short_name": {
          "type": "string",
          "example": "uk"
        },
        "bank_routing": {
          "$ref": "#/definitions/BankRoutingJSON"
        },
        "website_url": {
          "type": "string",
          "example": "https://www.example.com"
        }
      }
    },
    "MinimalBankJSON": {
      "required": [
        "national_identifier",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "OBP"
        },
        "national_identifier": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "LobbyJson": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "5"
        }
      }
    },
    "AkkaJSON": {
      "required": [
        "ports",
        "log_level"
      ],
      "properties": {
        "log_level": {
          "type": "string",
          "example": "Debug"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PortJSON"
          }
        }
      }
    },
    "CounterpartiesJsonV220": {
      "required": [
        "counterparties"
      ],
      "properties": {
        "counterparties": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CounterpartyJsonV220"
          }
        }
      }
    },
    "CoreCounterpartyJSON": {
      "required": [
        "id",
        "holder",
        "number",
        "kind",
        "IBAN",
        "swift_bic",
        "bank"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "1234"
        },
        "IBAN": {
          "type": "string",
          "example": "UK12344DB"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK12344DB"
        },
        "holder": {
          "$ref": "#/definitions/CoreAccountHolderJSON"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "123"
        },
        "kind": {
          "type": "string",
          "example": "AV"
        }
      }
    },
    "OtherAccountMetadataJSON": {
      "required": [
        "public_alias",
        "private_alias",
        "more_info",
        "URL",
        "image_URL",
        "open_corporates_URL",
        "corporate_location",
        "physical_location"
      ],
      "properties": {
        "public_alias": {
          "type": "string",
          "example": "NONE"
        },
        "image_URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "physical_location": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "private_alias": {
          "type": "string",
          "example": "NONE"
        },
        "URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "more_info": {
          "type": "string",
          "example": "www.openbankproject.com"
        },
        "corporate_location": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "open_corporates_URL": {
          "type": "string",
          "example": "www.openbankproject.com"
        }
      }
    },
    "ConfigurationJSON": {
      "required": [
        "akka",
        "elastic_search",
        "cache"
      ],
      "properties": {
        "cache": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CachedFunctionJSON"
          }
        },
        "elastic_search": {
          "$ref": "#/definitions/ElasticSearchJSON"
        },
        "akka": {
          "$ref": "#/definitions/AkkaJSON"
        }
      }
    },
    "TransactionRequestChargeJsonV200": {
      "required": [
        "summary",
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "summary": {
          "type": "string",
          "example": "Good"
        }
      }
    },
    "LicenseJson": {
      "required": [
        "id",
        "name"
      ],
      "properties": {
        "name": {
          "type": "string",
          "example": "TESOBE"
        },
        "id": {
          "type": "string",
          "example": "5"
        }
      }
    },
    "BranchRoutingJSON": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "UK87SK"
        },
        "scheme": {
          "type": "string",
          "example": "Swift"
        }
      }
    },
    "WarehouseJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "ElasticSearch"
        },
        "property": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "FXRateJSON": {
      "required": [
        "from_currency_code",
        "to_currency_code",
        "conversion_value",
        "inverse_conversion_value",
        "effective_date"
      ],
      "properties": {
        "inverse_conversion_value": {
          "type": "number",
          "format": "double",
          "example": "0.998"
        },
        "to_currency_code": {
          "type": "string",
          "example": "GBP"
        },
        "effective_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "conversion_value": {
          "type": "number",
          "format": "double",
          "example": "1.001"
        },
        "from_currency_code": {
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "TransactionRequestTypeJsonV140": {
      "required": [
        "value",
        "charge"
      ],
      "properties": {
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV140"
        },
        "value": {
          "type": "string",
          "example": "10"
        }
      }
    },
    "PinResetJSON": {
      "required": [
        "requested_date",
        "reason_requested"
      ],
      "properties": {
        "reason_requested": {
          "type": "string",
          "example": "forgot"
        },
        "requested_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        }
      }
    },
    "TransactionMetadataJSON": {
      "required": [
        "narrative",
        "comments",
        "tags",
        "images",
        "where"
      ],
      "properties": {
        "narrative": {
          "type": "string",
          "example": "NONE"
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionTagJSON"
          }
        },
        "where": {
          "$ref": "#/definitions/LocationJSONV121"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionImageJSON"
          }
        },
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionCommentJSON"
          }
        }
      }
    },
    "TransactionCommentsJSON": {
      "required": [
        "comments"
      ],
      "properties": {
        "comments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionCommentJSON"
          }
        }
      }
    },
    "LocationJson": {
      "required": [
        "latitude",
        "longitude"
      ],
      "properties": {
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        }
      }
    },
    "TransactionJSON": {
      "required": [
        "id",
        "this_account",
        "other_account",
        "details",
        "metadata"
      ],
      "properties": {
        "this_account": {
          "$ref": "#/definitions/ThisAccountJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "details": {
          "$ref": "#/definitions/TransactionDetailsJSON"
        },
        "metadata": {
          "$ref": "#/definitions/TransactionMetadataJSON"
        },
        "other_account": {
          "$ref": "#/definitions/OtherAccountJSON"
        }
      }
    },
    "CounterpartyJsonV220": {
      "required": [
        "name",
        "created_by_user_id",
        "this_bank_id",
        "this_account_id",
        "this_view_id",
        "counterparty_id",
        "other_bank_routing_scheme",
        "other_bank_routing_address",
        "other_branch_routing_scheme",
        "other_branch_routing_address",
        "other_account_routing_scheme",
        "other_account_routing_address",
        "is_beneficiary"
      ],
      "properties": {
        "other_account_routing_address": {
          "type": "string",
          "example": "829b116f-027c-4508-a537-6b15ed6fbaaa"
        },
        "other_account_routing_scheme": {
          "type": "string",
          "example": "IBAN"
        },
        "created_by_user_id": {
          "type": "string",
          "example": "49e1e147-64c1-4823-ad9f-89efcd02a9fa"
        },
        "name": {
          "type": "string",
          "example": "b2dd6c2c-7ebd-4014-9c73-b7d28cc71fe1"
        },
        "is_beneficiary": {
          "type": "boolean",
          "example": "true"
        },
        "other_branch_routing_address": {
          "type": "string",
          "example": "Berlin"
        },
        "other_bank_routing_scheme": {
          "type": "string",
          "example": "test"
        },
        "other_branch_routing_scheme": {
          "type": "string",
          "example": "OBP"
        },
        "this_account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "this_view_id": {
          "type": "string",
          "example": "owner"
        },
        "other_bank_routing_address": {
          "type": "string",
          "example": "test"
        },
        "this_bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "counterparty_id": {
          "type": "string",
          "example": "1d65db7c-a7b2-4839-af41-958276ab7790"
        }
      }
    },
    "AccountRoutingJSON": {
      "required": [
        "scheme",
        "address"
      ],
      "properties": {
        "address": {
          "type": "string",
          "example": "UKTF3049auf"
        },
        "scheme": {
          "type": "string",
          "example": "swftcode"
        }
      }
    },
    "CounterpartyIdJson": {
      "required": [
        "counterparty_id"
      ],
      "properties": {
        "counterparty_id": {
          "type": "string",
          "example": "123456"
        }
      }
    },
    "TransactionRequestChargeJsonV140": {
      "required": [
        "summary",
        "value"
      ],
      "properties": {
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "summary": {
          "type": "string",
          "example": "Good"
        }
      }
    },
    "LocationJSONV210": {
      "required": [
        "latitude",
        "longitude",
        "date",
        "user"
      ],
      "properties": {
        "user": {
          "$ref": "#/definitions/UserJSONV210"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "example": "11.45"
        }
      }
    },
    "TransactionRequestWithChargeJSON": {
      "required": [
        "id",
        "type",
        "from",
        "details",
        "transaction_ids",
        "status",
        "start_date",
        "end_date",
        "challenge",
        "charge"
      ],
      "properties": {
        "challenge": {
          "$ref": "#/definitions/ChallengeJSON"
        },
        "start_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "id": {
          "type": "string",
          "example": "1234"
        },
        "end_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "status": {
          "type": "string",
          "example": "Complete"
        },
        "from": {
          "$ref": "#/definitions/TransactionRequestAccountJSON"
        },
        "details": {
          "type": "string",
          "example": ""
        },
        "charge": {
          "$ref": "#/definitions/TransactionRequestChargeJsonV200"
        },
        "type": {
          "type": "string",
          "example": "SEPA"
        },
        "transaction_ids": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "ElasticSearchJSON": {
      "required": [
        "metrics",
        "warehouse"
      ],
      "properties": {
        "warehouse": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/WarehouseJSON"
          }
        },
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MetricsJSON"
          }
        }
      }
    },
    "MessageDocsJson": {
      "required": [
        "messageDocs"
      ],
      "properties": {
        "messageDocs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MessageDocJson"
          }
        }
      }
    },
    "NoSupportYet": {
      "properties": {}
    },
    "CustomerJsonV210": {
      "required": [
        "customer_id",
        "customer_number",
        "legal_name",
        "mobile_phone_number",
        "email",
        "face_image",
        "date_of_birth",
        "relationship_status",
        "dependants",
        "dob_of_dependants",
        "highest_education_attained",
        "employment_status",
        "kyc_status",
        "last_ok_date"
      ],
      "properties": {
        "customer_id": {
          "type": "string",
          "example": "123"
        },
        "email": {
          "type": "string",
          "example": "contact@tesobe.com"
        },
        "mobile_phone_number": {
          "type": "string",
          "example": "123"
        },
        "customer_number": {
          "type": "string",
          "example": "123"
        },
        "highest_education_attained": {
          "type": "string",
          "example": "123"
        },
        "dob_of_dependants": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "date"
          }
        },
        "date_of_birth": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "credit_rating": {
          "$ref": "#/definitions/CustomerCreditRatingJSON"
        },
        "last_ok_date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "employment_status": {
          "type": "string",
          "example": "123"
        },
        "legal_name": {
          "type": "string",
          "example": "legal_name"
        },
        "credit_limit": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "face_image": {
          "$ref": "#/definitions/CustomerFaceImageJson"
        },
        "dependants": {
          "type": "integer",
          "format": "int32",
          "example": "123"
        },
        "relationship_status": {
          "type": "string",
          "example": "123"
        },
        "kyc_status": {
          "type": "boolean",
          "example": "true"
        }
      }
    },
    "ModeratedAccountJSON": {
      "required": [
        "id",
        "label",
        "number",
        "owners",
        "type",
        "balance",
        "IBAN",
        "swift_bic",
        "views_available",
        "bank_id",
        "account_routing"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJSON"
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "IBAN": {
          "type": "string",
          "example": "GR1301720530005053000582373"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJSONV121"
          }
        },
        "swift_bic": {
          "type": "string",
          "example": "UKTF3049auf"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "type": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "AmountOfMoneyJSON": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "example": "10"
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "CustomerCreditRatingJSON": {
      "required": [
        "rating",
        "source"
      ],
      "properties": {
        "source": {
          "type": "string",
          "example": "OBP"
        },
        "rating": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "DriveUpJson": {
      "required": [
        "hours"
      ],
      "properties": {
        "hours": {
          "type": "string",
          "example": "5"
        }
      }
    },
    "TransactionWhereJSON": {
      "required": [
        "where"
      ],
      "properties": {
        "where": {
          "$ref": "#/definitions/LocationJSONV121"
        }
      }
    },
    "CreateAccountJSONV220": {
      "required": [
        "user_id",
        "label",
        "type",
        "balance",
        "branch_id",
        "account_routing"
      ],
      "properties": {
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJSON"
        },
        "branch_id": {
          "type": "string",
          "example": "1234"
        },
        "label": {
          "type": "string",
          "example": "Label"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "user_id": {
          "type": "string",
          "example": "66214b8e-259e-44ad-8868-3eb47be70646"
        },
        "type": {
          "type": "string",
          "example": "CURRENT"
        }
      }
    },
    "EntitlementJSON": {
      "required": [
        "entitlement_id",
        "role_name",
        "bank_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "role_name": {
          "type": "string",
          "example": "CanQueryOtherUser"
        },
        "entitlement_id": {
          "type": "string",
          "example": "6fb17583-1e49-4435-bb74-a14fe0996723"
        }
      }
    },
    "ViewsJSONV121": {
      "required": [
        "views"
      ],
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        }
      }
    },
    "MetricsJSON": {
      "required": [
        "property",
        "value"
      ],
      "properties": {
        "value": {
          "type": "string",
          "example": "Mapper"
        },
        "property": {
          "type": "string",
          "example": "String"
        }
      }
    },
    "MetaJson": {
      "required": [
        "license"
      ],
      "properties": {
        "license": {
          "$ref": "#/definitions/LicenseJson"
        }
      }
    },
    "BasicViewJSON": {
      "required": [
        "id",
        "short_name",
        "is_public"
      ],
      "properties": {
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "HHH"
        },
        "id": {
          "type": "string",
          "example": "1"
        }
      }
    },
    "OtherAccountJSON": {
      "required": [
        "id",
        "holder",
        "number",
        "kind",
        "IBAN",
        "swift_bic",
        "bank",
        "metadata"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "IBAN": {
          "type": "string",
          "example": "UK234DB"
        },
        "swift_bic": {
          "type": "string",
          "example": "UK12321DB"
        },
        "holder": {
          "$ref": "#/definitions/AccountHolderJSON"
        },
        "bank": {
          "$ref": "#/definitions/MinimalBankJSON"
        },
        "id": {
          "type": "string",
          "example": "5995d6a2-01b3-423c-a173-5481df49bdaf"
        },
        "metadata": {
          "$ref": "#/definitions/OtherAccountMetadataJSON"
        },
        "kind": {
          "type": "string",
          "example": "3456"
        }
      }
    },
    "TransactionNarrativeJSON": {
      "required": [
        "narrative"
      ],
      "properties": {
        "narrative": {
          "type": "string",
          "example": "narative"
        }
      }
    },
    "TransactionRequestTypesJsonV140": {
      "required": [
        "transaction_request_types"
      ],
      "properties": {
        "transaction_request_types": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionRequestTypeJsonV140"
          }
        }
      }
    },
    "BanksJSON": {
      "required": [
        "banks"
      ],
      "properties": {
        "banks": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/BankJSON"
          }
        }
      }
    },
    "AccountHolderJSON": {
      "required": [
        "name",
        "is_alias"
      ],
      "properties": {
        "is_alias": {
          "type": "boolean",
          "example": "true"
        },
        "name": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "ConnectorMetricJson": {
      "required": [
        "connector_name",
        "function_name",
        "obp_api_request_id",
        "date",
        "duration"
      ],
      "properties": {
        "connector_name": {
          "type": "string",
          "example": "mapper"
        },
        "duration": {
          "type": "integer",
          "format": "int64",
          "example": "1000"
        },
        "function_name": {
          "type": "string",
          "example": "getBanks"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "obp_api_request_id": {
          "type": "string",
          "example": "12345"
        }
      }
    },
    "TransactionRequestBodyCounterpartyJSON": {
      "required": [
        "to",
        "value",
        "description",
        "charge_policy"
      ],
      "properties": {
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "description": {
          "type": "string",
          "example": "A description for the transaction to the counterparty"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "to": {
          "$ref": "#/definitions/CounterpartyIdJson"
        }
      }
    },
    "TransactionRequestBodySEPAJSON": {
      "required": [
        "value",
        "to",
        "description",
        "charge_policy"
      ],
      "properties": {
        "charge_policy": {
          "type": "string",
          "example": "SHARED"
        },
        "description": {
          "type": "string",
          "example": "This is a SEPA Transaction Request"
        },
        "to": {
          "$ref": "#/definitions/IbanJson"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        }
      }
    },
    "ModeratedCoreAccountJSON": {
      "required": [
        "id",
        "label",
        "number",
        "owners",
        "type",
        "balance",
        "IBAN",
        "swift_bic",
        "bank_id",
        "account_routing"
      ],
      "properties": {
        "number": {
          "type": "string",
          "example": "123"
        },
        "account_routing": {
          "$ref": "#/definitions/AccountRoutingJSON"
        },
        "IBAN": {
          "type": "string",
          "example": "GR1301720530005053000582373"
        },
        "label": {
          "type": "string",
          "example": "NoneLabel"
        },
        "owners": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserJSONV121"
          }
        },
        "swift_bic": {
          "type": "string",
          "example": "UKTF3049auf"
        },
        "balance": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "type": {
          "type": "string",
          "example": "OBP"
        }
      }
    },
    "OtherAccountsJSON": {
      "required": [
        "other_accounts"
      ],
      "properties": {
        "other_accounts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OtherAccountJSON"
          }
        }
      }
    },
    "PermissionsJSON": {
      "required": [
        "permissions"
      ],
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PermissionJSON"
          }
        }
      }
    },
    "EntitlementJSONs": {
      "required": [
        "list"
      ],
      "properties": {
        "list": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/EntitlementJSON"
          }
        }
      }
    },
    "TransactionRequestAccountJSON": {
      "required": [
        "bank_id",
        "account_id"
      ],
      "properties": {
        "account_id": {
          "type": "string",
          "example": "8ca8a7e4-6d02-48e3-a029-0b2bf89de9f0"
        },
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        }
      }
    },
    "UpdateAccountJSON": {
      "required": [
        "id",
        "label",
        "bank_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "gh.29.uk"
        },
        "label": {
          "type": "string",
          "example": "label"
        },
        "id": {
          "type": "string",
          "example": "123123"
        }
      }
    },
    "ChallengeJSON": {
      "required": [
        "id",
        "allowed_attempts",
        "challenge_type"
      ],
      "properties": {
        "challenge_type": {
          "type": "string",
          "example": "SANDBOX_TAN"
        },
        "allowed_attempts": {
          "type": "integer",
          "format": "int32",
          "example": "3"
        },
        "id": {
          "type": "string",
          "example": "be1a183d-b301-4b83-b855-5eeffdd3526f"
        }
      }
    },
    "TransactionDetailsJSON": {
      "required": [
        "type",
        "description",
        "posted",
        "completed",
        "new_balance",
        "value"
      ],
      "properties": {
        "new_balance": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "description": {
          "type": "string",
          "example": "GOOD"
        },
        "completed": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        },
        "type": {
          "type": "string",
          "example": "AC"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "posted": {
          "type": "string",
          "format": "date",
          "example": "Tue Jan 22 00:08:00 CET 2013"
        }
      }
    },
    "TransactionRequestBodyJsonV200": {
      "required": [
        "to",
        "value",
        "description"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "A description for the transaction to be created"
        },
        "value": {
          "$ref": "#/definitions/AmountOfMoneyJSON"
        },
        "to": {
          "$ref": "#/definitions/TransactionRequestAccountJSON"
        }
      }
    },
    "AmountOfMoney": {
      "required": [
        "currency",
        "amount"
      ],
      "properties": {
        "amount": {
          "type": "string",
          "example": "100"
        },
        "currency": {
          "type": "string",
          "example": "EUR"
        }
      }
    },
    "TransactionsJSON": {
      "required": [
        "transactions"
      ],
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/TransactionJSON"
          }
        }
      }
    },
    "ConnectorMetricsJson": {
      "required": [
        "metrics"
      ],
      "properties": {
        "metrics": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConnectorMetricJson"
          }
        }
      }
    },
    "UpdateViewJSON": {
      "required": [
        "description",
        "is_public",
        "which_alias_to_use",
        "hide_metadata_if_alias_used",
        "allowed_actions"
      ],
      "properties": {
        "description": {
          "type": "string",
          "example": "good"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "which_alias_to_use": {
          "type": "string",
          "example": "good"
        },
        "allowed_actions": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AccountJSON": {
      "required": [
        "id",
        "label",
        "views_available",
        "bank_id"
      ],
      "properties": {
        "bank_id": {
          "type": "string",
          "example": "gh.uk.db"
        },
        "views_available": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ViewJSONV121"
          }
        },
        "label": {
          "type": "string",
          "example": "OBP"
        },
        "id": {
          "type": "string",
          "example": "123"
        }
      }
    },
    "ViewJSONV220": {
      "required": [
        "id",
        "short_name",
        "description",
        "is_public",
        "alias",
        "hide_metadata_if_alias_used",
        "can_add_comment",
        "can_add_corporate_location",
        "can_add_image",
        "can_add_image_url",
        "can_add_more_info",
        "can_add_open_corporates_url",
        "can_add_physical_location",
        "can_add_private_alias",
        "can_add_public_alias",
        "can_add_tag",
        "can_add_url",
        "can_add_where_tag",
        "can_delete_comment",
        "can_add_counterparty",
        "can_delete_corporate_location",
        "can_delete_image",
        "can_delete_physical_location",
        "can_delete_tag",
        "can_delete_where_tag",
        "can_edit_owner_comment",
        "can_see_bank_account_balance",
        "can_see_bank_account_bank_name",
        "can_see_bank_account_currency",
        "can_see_bank_account_iban",
        "can_see_bank_account_label",
        "can_see_bank_account_national_identifier",
        "can_see_bank_account_number",
        "can_see_bank_account_owners",
        "can_see_bank_account_swift_bic",
        "can_see_bank_account_type",
        "can_see_comments",
        "can_see_corporate_location",
        "can_see_image_url",
        "can_see_images",
        "can_see_more_info",
        "can_see_open_corporates_url",
        "can_see_other_account_bank_name",
        "can_see_other_account_iban",
        "can_see_other_account_kind",
        "can_see_other_account_metadata",
        "can_see_other_account_national_identifier",
        "can_see_other_account_number",
        "can_see_other_account_swift_bic",
        "can_see_owner_comment",
        "can_see_physical_location",
        "can_see_private_alias",
        "can_see_public_alias",
        "can_see_tags",
        "can_see_transaction_amount",
        "can_see_transaction_balance",
        "can_see_transaction_currency",
        "can_see_transaction_description",
        "can_see_transaction_finish_date",
        "can_see_transaction_metadata",
        "can_see_transaction_other_bank_account",
        "can_see_transaction_start_date",
        "can_see_transaction_this_bank_account",
        "can_see_transaction_type",
        "can_see_url",
        "can_see_where_tag"
      ],
      "properties": {
        "can_see_transaction_start_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_this_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_owners": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_edit_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_owner_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "description": {
          "type": "string",
          "example": "description"
        },
        "can_see_transaction_other_bank_account": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_comments": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_bank_name": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_number": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_kind": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_label": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_currency": {
          "type": "boolean",
          "example": "true"
        },
        "is_public": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_finish_date": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_images": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_currency": {
          "type": "boolean",
          "example": "true"
        },
        "hide_metadata_if_alias_used": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "alias": {
          "type": "string",
          "example": "No"
        },
        "can_add_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_image_url": {
          "type": "boolean",
          "example": "true"
        },
        "id": {
          "type": "string",
          "example": "1234"
        },
        "can_see_bank_account_national_identifier": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_counterparty": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_tags": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_open_corporates_url": {
          "type": "boolean",
          "example": "true"
        },
        "short_name": {
          "type": "string",
          "example": "short_name"
        },
        "can_delete_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_more_info": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_comment": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_where_tag": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_private_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_public_alias": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_swift_bic": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_iban": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_physical_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_add_corporate_location": {
          "type": "boolean",
          "example": "true"
        },
        "can_delete_image": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_url": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_balance": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_amount": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_other_account_metadata": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_bank_account_type": {
          "type": "boolean",
          "example": "true"
        },
        "can_see_transaction_description": {
          "type": "boolean",
          "example": "true"
        }
      }
    }
  }
}