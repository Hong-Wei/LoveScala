swagger: '2.0'
info:
  title: Open Bank Project API
  description: >-
    An Open Source API for Banks. (c) TESOBE Ltd. 2011 - 2016. Licensed under
    the AGPL and commercial licences.
  contact:
    name: TESOBE Ltd. / Open Bank Project
    url: 'https://openbankproject.com'
  version: v2.1.0
host: '127.0.0.1:8080'
basePath: /obp/v2.1.0
schemes:
  - http
  - https
paths:
  /accounts:
    get:
      tags:
        - '1_2_1'
      summary: Get accounts at all banks (Authenticated + Anonymous access).
      description: >-
        <p>Returns the list of accounts at that the user has access to at all
        banks. For each account the API returns the account ID and the available
        views.</p><p>If the user is not authenticated via OAuth, the list will
        contain only the accounts providing public views. If the user is
        authenticated, the list will contain non-public accounts to which the
        user has access, in addition to all public accounts.</p><p>Note for
        those upgrading from v1.2: The v1.2 version of this call was buggy in
        that it did not include public accounts if an authenticated user made
        the call. If you need the previous behaviour, please use the API call
        for private accounts (..../accounts/private).</p>
      operationId: 1_2_1-allAccountsAllBanks
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/account:
    get:
      tags:
        - '2_0_0'
      summary: Get Account by Id (Full)
      description: >-
        <p>Information returned about an account specified by ACCOUNT_ID as
        moderated by the view (VIEW_ID):</p><ul>  <li>Number</li> 
        <li>Owners</li>  <li>Type</li>  <li>Balance</li>  <li>IBAN</li> 
        <li>Available views (sorted by short_name)</li></ul><p>More details
        about the data moderation by the view <a
        href="#1_2_1-getViewsForBankAccount">here</a>.</p><p>PSD2 Context: PSD2
        requires customers to have access to their account information via third
        party applications. This call provides balance and other account
        information via delegated authenticaiton using OAuth.</p><p>OAuth
        authentication is required if the 'is_public' field in view (VIEW_ID) is
        not set to <code>true</code>.</p>
      operationId: 2_0_0-accountById
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts:
    get:
      tags:
        - '1_2_1'
      summary: Get Counterparties of one Account.
      description: >-
        <p>Returns data about all the counterparties (other accounts) that have
        shared at least one transaction with the ACCOUNT_ID at BANK_ID.
        Authentication is Optional Authentication is required if the view
        VIEW_ID is not public.</p>
      operationId: 1_2_1-getCounterpartiesForBankAccount
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/other_accounts/OTHER_ACCOUNT_ID:
    get:
      tags:
        - '1_2_1'
      summary: Get Counterparty by Id.
      description: >-
        <p>Returns data about a counterparty (aka Other Account) that had shared
        at least one transaction with ACCOUNT_ID at BANK_ID. Authentication is
        Optional Authentication is required if the view is not public.</p>
      operationId: 1_2_1-getCounterpartyByIdForBankAccount
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types:
    get:
      tags:
        - '1_4_0'
      summary: Get Transaction Request Types for Account
      description: >-
        <p>Returns the Transation Request Types that the account specified by
        ACCOUNT_ID and view specified by VIEW_ID has access to.</p><p>These are
        the ways this API Server can create a Transaction via a Transaction
        Request (as opposed to Transaction Types which include external types
        too e.g. for Transactions created by core banking etc.)</p><p>A
        Transaction Request Type internally determines:</p><ul>  <li>the
        required Transaction Request 'body' i.e. fields that define the 'what'
        and 'to' of a Transaction Request,</li>  <li>the type of security
        challenge that may be be raised before the Transaction Request proceeds,
        and</li>  <li>the threshold of that challenge.</li></ul><p>For instance
        in a 'SANDBOX_TAN' Transaction Request, for amounts over 1000 currency
        units, the user must supply a positive integer to complete the
        Transaction Request and create a Transaction.</p><p>This approach aims
        to provide only one endpoint for initiating transactions, and one that
        handles challenges, whilst still allowing flexibility with the payload
        and internal logic.</p>
      operationId: 1_4_0-getTransactionRequestTypes
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/TransactionReponseTypes'
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests:
    post:
      tags:
        - '2_1_0'
      summary: Create Transaction Request.
      description: >-
        <p>Initiate a Payment via a Transaction Request.</p><p>This is the
        preferred method to create a payment and supersedes makePayment in
        1.2.1.</p><p>In OBP, a <code>transaction request</code> may or may not
        result in a <code>transaction</code>. A <code>transaction</code> only
        has one possible state: completed.</p><p>A <code>transaction
        request</code> on the other hand can have one of several
        states.</p><p>Think of <code>transactions</code> as items in a bank
        statement that represent the movement of money.</p><p>Think of
        <code>transaction requests</code> as orders to move money which may or
        may not succeeed and result in a <code>transaction</code>.</p><p>A
        <code>transaction request</code> might create a security challenge that
        needs to be answered before the <code>transaction request</code>
        proceeds.</p><p>Transaction Requests contain charge information giving
        the client the opporunity to proceed or not (as long as the challenge
        level is appropriate).</p><p>Transaction Requests can have one of
        several Transaction Request Types which expect different bodies. The
        escaped body is returned in the details key of the GET response. This
        provides some commonality and one URL for many differrent payment or
        transfer types with enough flexilbity to validate them
        differently.</p><p>The payer is set in the URL. Money comes out of the
        BANK_ID and ACCOUNT_ID specified in the UR</p><p>The payee is set in the
        request body. Money goes into the BANK_ID and ACCOUNT_ID specified in
        the request body.</p><p>In sandbox mode, TRANSACTION_REQUEST_TYPE is
        commonly set to SANDBOX_TAN. See
        getTransactionRequestTypesSupportedByBank for all supported
        types.</p><p>In sandbox mode, if the amount is less than 1000 EUR (any
        currency, unless it is set differently on this server), the transaction
        request will create a transaction without a challenge, else the
        Transaction Request will be set to INITIALISED and a challenge will need
        to be answered.</p><p>If a challenge is created you must answer it using
        Answer Transaction Request Challenge before the Transaction is
        created.</p><p>You can transfer between different currency accounts.
        (new in 2.0.0). The currency in body must match the sending
        account.</p><p>The following static FX rates are available in sandbox
        mode:</p><p>{  "KRW":{  "GBP":7.1E-4,  "AED":0.0032,  "INR":0.058, 
        "JPY":0.092,  "USD":8.8E-4,  "EUR":8.0E-4  },  "GBP":{  "KRW":1409.23, 
        "AED":5.22,  "INR":94.66,  "JPY":154.47,  "USD":1.42,  "EUR":1.26  }, 
        "AED":{  "KRW":309.09,  "GBP":0.19,  "INR":18.15,  "JPY":29.61, 
        "USD":0.27,  "EUR":0.24  },  "INR":{  "KRW":17.11,  "GBP":0.011, 
        "AED":0.055,  "JPY":1.63,  "USD":0.015,  "EUR":0.013  },  "JPY":{ 
        "KRW":10.82,  "GBP":0.0065,  "AED":0.034,  "INR":0.61,  "USD":0.0092, 
        "EUR":0.0081  },  "USD":{  "KRW":1135.18,  "GBP":0.7,  "AED":3.67, 
        "INR":66.65,  "JPY":108.77,  "EUR":0.89  },  "EUR":{  "KRW":1254.34, 
        "GBP":0.79,  "AED":4.14,  "INR":75.2,  "JPY":122.71,  "USD":1.13  }
        }</p><p>PSD2 Context: Third party access access to payments is a core
        tenent of PSD2.</p><p>This call satisfies that requirement from several
        perspectives:</p><p>1) A transaction can be initiated by a third party
        application.</p><p>2) The customer is informed of the charge that will
        incurred.</p><p>3) The call uses delegated authentication
        (OAuth)</p><p>See <a
        href="https://github.com/OpenBankProject/Hello-OBP-DirectLogin-Python/blob/master/hello_payments.py">this
        python code</a> for a complete example of this
        flow.</p><p>Authentication is Mandatory</p>
      operationId: 2_1_0-createTransactionRequest
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-request-types/TRANSACTION_REQUEST_TYPE/transaction-requests/TRANSACTION_REQUEST_ID/challenge:
    post:
      tags:
        - '2_1_0'
      summary: Answer Transaction Request Challenge.
      description: >-
        <p>In Sandbox mode, any string that can be converted to a positive
        integer will be accepted as an answer.</p>
      operationId: 2_1_0-answerTransactionRequestChallenge
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transaction-requests:
    get:
      tags:
        - '2_1_0'
      summary: Get Transaction Requests.
      description: >-
        <p>Returns transaction requests for account specified by ACCOUNT_ID at
        bank specified by BANK_ID.</p><p>The VIEW_ID specified must be 'owner'
        and the user must have access to this view.</p><p>Version 2.0.0 now
        returns charge information.</p><p>Transaction Requests serve to initiate
        transactions that may or may not proceed. They contain information
        including:</p><ul>  <li>Transaction Request Id</li>  <li>Type</li> 
        <li>Status (INITIATED, COMPLETED)</li>  <li>Challenge (in order to
        confirm the request)</li>  <li>From Bank / Account</li>  <li>Details
        including Currency, Value, Description and other initiation information
        specific to each type. (Could potentialy include a list of future
        transactions.)</li>  <li>Related Transactions</li></ul><p>PSD2 Context:
        PSD2 requires transparency of charges to the customer. This endpoint
        provides the charge that would be applied if the Transaction Request
        proceeds - and a record of that charge there after. The customer can
        proceed with the Transaction by answering the security challenge.</p>
      operationId: 2_1_0-getTransactionRequests
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions:
    get:
      tags:
        - '1_2_1'
      summary: Get Transactions for Account (Full)
      description: >-
        <p>Returns transactions list of the account specified by ACCOUNT_ID and
        <a href="#1_2_1-getViewsForBankAccount">moderated</a> by the view
        (VIEW_ID).</p><p>Authentication via OAuth is required if the view is not
        public.</p><p>Possible custom headers for pagination:</p><ul> 
        <li>obp_sort_by=CRITERIA ==&gt; default value: "completed" field</li> 
        <li>obp_sort_direction=ASC/DESC ==&gt; default value: DESC</li> 
        <li>obp_limit=NUMBER ==&gt; default value: 50</li> 
        <li>obp_offset=NUMBER ==&gt; default value: 0</li> 
        <li>obp_from_date=DATE =&gt; default value: date of the oldest
        transaction registered (format below)</li>  <li>obp_to_date=DATE =&gt;
        default value: date of the newest transaction registered (format
        below)</li></ul><p><strong>Date format parameter</strong>:
        "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" (2014-07-01T00:00:00.000Z) ==&gt; time
        zone is UTC.</p>
      operationId: 1_2_1-getTransactionsForBankAccount
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/accounts/ACCOUNT_ID/VIEW_ID/transactions/TRANSACTION_ID/transaction:
    get:
      tags:
        - '1_2_1'
      summary: Get Transaction by Id.
      description: >-
        <p>Returns one transaction specified by TRANSACTION_ID of the account
        ACCOUNT_ID and <a href="#1_2_1-getViewsForBankAccount">moderated</a> by
        the view (VIEW_ID).</p><p>Authentication is Optional Authentication is
        required if the view is not public.</p>
      operationId: 1_2_1-getTransactionByIdForBankAccount
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/transaction-types:
    get:
      tags:
        - '2_0_0'
      summary: Get Transaction Types offered by the bank
      description: >-
        <p>Get Transaction Types for the bank specified by BANK_ID:</p><p>Lists
        the possible Transaction Types available at the bank (as opposed to
        Transaction Request Types which are the possible ways Transactions can
        be created by this API Server).</p><ul>  <li>id : Unique transaction
        type id across the API instance. SHOULD be a UUID. MUST be unique.</li> 
        <li>bank_id : The bank that supports this TransactionType</li> 
        <li>short_code : A short code (SHOULD have no-spaces) which MUST be
        unique across the bank. May be stored with Transactions to link
        here</li>  <li>summary : A succinct summary</li>  <li>description : A
        longer description</li>  <li>charge : The charge to the customer for
        each one of these</li></ul><p>Authentication is Optional</p>
      operationId: 2_0_0-getTransactionTypes
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /banks/BANK_ID/users/USER_ID/entitlements:
    get:
      tags:
        - '2_1_0'
      summary: Get Entitlements specified by BANK_ID and USER_ID
      description: <p>Login is required.</p>
      operationId: 2_1_0-getEntitlementsByBankAndUser
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /my/accounts:
    get:
      tags:
        - '2_0_0'
      summary: Get Accounts at all Banks (Private)
      description: >-
        <p>Get private accounts at all banks (Authenticated access) Returns the
        list of accounts containing private views for the user at all banks. For
        each account the API returns the ID and the available
        views.</p><p>Authentication is Mandatory</p>
      operationId: 2_0_0-privateAccountsAllBanks
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /my/banks/BANK_ID/accounts:
    get:
      tags:
        - '2_0_0'
      summary: Get Accounts at Bank (Private)
      description: >-
        <p>Get private accounts at one bank (Authenticated access). Returns the
        list of accounts containing private views for the user at BANK_ID. For
        each account the API returns the ID and the available
        views.</p><p>Authentication via OAuth is required.</p>
      operationId: 2_0_0-privateAccountsAtOneBank
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /my/banks/BANK_ID/accounts/ACCOUNT_ID/account:
    get:
      tags:
        - '2_0_0'
      summary: Get Account by Id (Core)
      description: >-
        <p>Information returned about the account specified by
        ACCOUNT_ID:</p><ul>  <li>Number</li>  <li>Owners</li>  <li>Type</li> 
        <li>Balance</li>  <li>IBAN</li></ul><p>This call returns the owner view
        and requires access to that view.</p><p>OAuth authentication is
        required</p>
      operationId: 2_0_0-getCoreAccountById
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/Error'
  /my/banks/BANK_ID/accounts/ACCOUNT_ID/transactions:
    get:
      tags:
        - '2_0_0'
      summary: Get Transactions for Account (Core)
      description: >-
        <p>Returns transactions list (Core info) of the account specified by
        ACCOUNT_ID.</p><p>Authentication is required.</p><p>Possible custom
        headers for pagination:</p><ul>  <li>obp_sort_by=CRITERIA ==&gt; default
        value: "completed" field</li>  <li>obp_sort_direction=ASC/DESC ==&gt;
        default value: DESC</li>  <li>obp_limit=NUMBER ==&gt; default value:
        50</li>  <li>obp_offset=NUMBER ==&gt; default value: 0</li> 
        <li>obp_from_date=DATE =&gt; default value: date of the oldest
        transaction registered (format below)</li>  <li>obp_to_date=DATE =&gt;
        default value: date of the newest transaction registered (format
        below)</li></ul><p><strong>Date format parameter</strong>:
        "yyyy-MM-dd'T'HH:mm:ss.SSS'Z'" (2014-07-01T00:00:00.000Z) ==&gt; time
        zone is UTC.</p>
      operationId: 2_0_0-getCoreTransactionsForBankAccount
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/TransactionReponseTypes/Error'
  /roles:
    get:
      tags:
        - '2_1_0'
      summary: Get Roles
      description: <p>Returns all available roles</p><p>Login is required.</p>
      operationId: 2_1_0-getRoles
      responses:
        '200':
          description: Success
        '400':
          description: Error
          schema:
            $ref: '#/definitions/TransactionReponseTypes/Error'
definitions:
  Error:
    type: object
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
      message:
        type: string
#  TransactionReponseTypes:
#    required:
#      - transactionReponseTypes
#    properties:
#      transactionReponseTypes:
#        type: array
#        items:
#          $ref: '#/definitions/TransactionReponseTypes'
  TransactionReponseTypes:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
    TransactionReponseTypes2:
        properties:[]

